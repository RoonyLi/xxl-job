<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobInfoDao">

	<resultMap id="XxlJobInfo" type="com.xxl.job.admin.core.model.XxlJobInfo" >
		<result column="ID" property="id" />

		<result column="JOB_GROUP" property="jobGroup" />
	    <result column="JOB_CRON" property="jobCron" />
	    <result column="JOB_DESC" property="jobDesc" />

	    <result column="ADD_TIME" property="addTime" />
	    <result column="UPDATE_TIME" property="updateTime" />

	    <result column="AUTHOR" property="author" />
	    <result column="ALARM_EMAIL" property="alarmEmail" />

		<result column="EXECUTOR_ROUTE_STRATEGY" property="executorRouteStrategy" />
		<result column="EXECUTOR_HANDLER" property="executorHandler" />
	    <result column="EXECUTOR_PARAM" property="executorParam" />
		<result column="EXECUTOR_BLOCK_STRATEGY" property="executorBlockStrategy" />
		<result column="EXECUTOR_TIMEOUT" property="executorTimeout" />
		<result column="EXECUTOR_FAIL_RETRY_COUNT" property="executorFailRetryCount" />

	    <result column="GLUE_TYPE" property="glueType" />
	    <result column="GLUE_SOURCE" property="glueSource" />
	    <result column="GLUE_REMARK" property="glueRemark" />
		<result column="GLUE_UPDATETIME" property="glueUpdatetime" />

		<result column="CHILD_JOBID" property="childJobId" />
	</resultMap>

	<sql id="Base_Column_List">
		t.ID,
		t.JOB_GROUP,
		t.JOB_CRON,
		t.JOB_DESC,
		t.ADD_TIME,
		t.UPDATE_TIME,
		t.AUTHOR,
		t.ALARM_EMAIL,
		t.EXECUTOR_ROUTE_STRATEGY,
		t.EXECUTOR_HANDLER,
		t.EXECUTOR_PARAM,
		t.EXECUTOR_BLOCK_STRATEGY,
		t.EXECUTOR_TIMEOUT,
		t.EXECUTOR_FAIL_RETRY_COUNT,
		t.GLUE_TYPE,
		t.GLUE_SOURCE,
		t.GLUE_REMARK,
		t.GLUE_UPDATETIME,
		t.CHILD_JOBID
	</sql>

	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
	SELECT <include refid="Base_Column_List" />
  	FROM (
  		SELECT t.* , ROWNUM rn FROM  (
	  		SELECT <include refid="Base_Column_List" /> 
			FROM XXL_JOB_QRTZ_TRIGGER_INFO  t
			<trim prefix="WHERE" prefixOverrides="AND | OR" >
				<if test="jobGroup gt 0">
					AND t.JOB_GROUP = #{jobGroup}
				</if>
				<if test="jobDesc != null and jobDesc != ''">
					AND t.JOB_DESC like CONCAT(CONCAT('%', #{jobDesc}), '%')
				</if>
				<if test="executorHandler != null and executorHandler != ''">
					AND t.EXECUTOR_HANDLER like CONCAT(CONCAT('%', #{executorHandler}), '%')
				</if>
			</trim>
			ORDER BY id DESC) t
			WHERE ROWNUM <![CDATA[ < ]]>= #{end}) t
		WHERE rn <![CDATA[ > ]]>= #{start}
	</select>

	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM XXL_JOB_QRTZ_TRIGGER_INFO  t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND t.JOB_GROUP = #{jobGroup}
			</if>
			<if test="jobDesc != null and jobDesc != ''">
				AND t.JOB_DESC like CONCAT(CONCAT('%', #{jobDesc}), '%')
			</if>
			<if test="executorHandler != null and executorHandler != ''">
				AND t.EXECUTOR_HANDLER like CONCAT(CONCAT('%', #{executorHandler}), '%')
			</if>
		</trim>
	</select>

	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobInfo" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
			select TRIGGER_INFO_SEQUENCE.nextval  as id from dual
		</selectKey>	
		INSERT INTO XXL_JOB_QRTZ_TRIGGER_INFO (
			ID,
			job_group,
			job_cron,
			job_desc,
			add_time,
			update_time,
			author,
			alarm_email,
            executor_route_strategy,
			executor_handler,
			executor_param,
			executor_block_strategy,
			executor_timeout,
			executor_fail_retry_count,
			glue_type,
			glue_source,
			glue_remark,
			glue_updatetime,
			child_jobid
		) VALUES (
			#{id,jdbcType=INTEGER},
			#{jobGroup,jdbcType=INTEGER},
			#{jobCron,jdbcType=VARCHAR},
			#{jobDesc,jdbcType=VARCHAR},
			SYSDATE,
			SYSDATE,
			#{author,jdbcType=VARCHAR},
			#{alarmEmail,jdbcType=VARCHAR},
			#{executorRouteStrategy,jdbcType=VARCHAR},
			#{executorHandler,jdbcType=VARCHAR},
			#{executorParam,jdbcType=VARCHAR},
			#{executorBlockStrategy,jdbcType=VARCHAR},
			#{executorTimeout,jdbcType=INTEGER},
			#{executorFailRetryCount,jdbcType=INTEGER},
			#{glueType,jdbcType=INTEGER},
			#{glueSource,jdbcType=CLOB},
			#{glueRemark,jdbcType=VARCHAR},
			SYSDATE,
			#{childJobId,jdbcType=VARCHAR}
		)
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
			/*SELECT @@IDENTITY  id*/
		</selectKey>-->
	</insert>

	<select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_JOB_QRTZ_TRIGGER_INFO  t
		WHERE t.id = #{id}
	</select>

	<update id="update" parameterType="com.xxl.job.admin.core.model.XxlJobInfo" >
		UPDATE XXL_JOB_QRTZ_TRIGGER_INFO
		SET
			job_cron = #{jobCron,jdbcType=VARCHAR},
			job_desc = #{jobDesc,jdbcType=VARCHAR},
			update_time = SYSDATE,
			author = #{author,jdbcType=VARCHAR},
			alarm_email = #{alarmEmail,jdbcType=VARCHAR},
			executor_route_strategy = #{executorRouteStrategy,jdbcType=VARCHAR},
			executor_handler = #{executorHandler,jdbcType=VARCHAR},
			executor_param = #{executorParam,jdbcType=VARCHAR},
			executor_block_strategy = #{executorBlockStrategy,jdbcType=VARCHAR},
			executor_timeout = ${executorTimeout},
			executor_fail_retry_count = ${executorFailRetryCount},
			glue_type = #{glueType,jdbcType=VARCHAR},
			glue_source = #{glueSource,jdbcType=CLOB},
			glue_remark = #{glueRemark,jdbcType=VARCHAR},
			glue_updatetime = SYSDATE,
			child_jobid = #{childJobId}
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="java.util.HashMap">
		DELETE
		FROM XXL_JOB_QRTZ_TRIGGER_INFO
		WHERE id = #{id}
	</delete>

	<select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_JOB_QRTZ_TRIGGER_INFO  t
		WHERE t.job_group = #{jobGroup}
	</select>

	<select id="findAllCount" resultType="int">
		SELECT count(1)
		FROM XXL_JOB_QRTZ_TRIGGER_INFO
	</select>

</mapper>